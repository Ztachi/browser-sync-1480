$designWidth: 750; // 设计图宽度
@function toUnit($val) {
    @return $val / $designWidth * 7.5rem;
}

//同时设置相同宽高并设置成圆形
@mixin equalWH($num, $circle:true, $center:false) {
    width: toUnit($num);
    height: toUnit($num);
    @if($circle) {
        border-radius: 50%;
    }
    @if($center) {
        line-height: toUnit($num);
        text-align: center;
    }
}

//设置兼容透明度
@mixin opacity($num) {
    opacity: $num;
    filter: alpha(opacity=$num * 100);
}

//同时设置高度和行高
@mixin height($h) {
    height: toUnit($h);
    line-height: toUnit($h);
}

//同时设置宽度和居中
@mixin widthCenter($w) {
    width: toUnit($w);
    text-align: center;
}

//设置未知宽高元素居中
@mixin middle($x, $y) {
    position: absolute;
    @if($x and $y) {
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
    }
    @else {
        @if($x) {
            left: 50%;
            transform: translateX(-50%);
        }
        @if($y) {
            top: 50%;
            transform: translateY(-50%);
        }
    }
}

//设置已知宽高元素居中
@mixin middleWH($width, $height) {
    position: absolute;
    @if($width) {
        left: 50%;
        margin-left: - toUnit($width / 2);
    }
    @if($height) {
        top: 50%;
        margin-top: - toUnit($height / 2);
    }
}

//透明蒙层背景色
@mixin bgBlack($opacity) {
    background-color: rgba(0, 0, 0, $opacity);
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#7F000000, endColorstr=#7F000000);
}

//单行超出宽度截取
@mixin ellipsis {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

@mixin clear {
    &:after,
    &:before {
        content: " ";
        display: table;
    }
    &:after {
        clear: both;
    }
}

@mixin wh($w,$h,$wc:false,$hc:false){
    width: toUnit($w);
    height: toUnit($h);
    @if($wc){
        text-align: center;
    }
    @if($hc){
        line-height: toUnit($h);
    }
}

$c_g:#30c5c3;